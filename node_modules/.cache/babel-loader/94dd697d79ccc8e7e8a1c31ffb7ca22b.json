{"ast":null,"code":"var _jsxFileName = \"/home/hugo/workspace/animation/src/Menu/Menu.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from \"assets/svg/logo.svg\";\nimport logoMf from \"assets/svg/manoFulfillment.svg\";\nimport logoB2b from \"assets/svg/stock.svg\";\nimport MenuItem from './MenuItem';\nimport './menu.scss';\n\nconst Menu = ({\n  activeLocation,\n  menuOptions,\n  isB2b,\n  isMf\n}) => React.createElement(\"aside\", {\n  className: \"menu\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, console.log(activeLocation), React.createElement(\"figure\", {\n  className: \"menu__logo-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, isB2b && React.createElement(\"img\", {\n  src: logoB2b,\n  alt: \"manomano\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), isMf && React.createElement(\"img\", {\n  src: logoMf,\n  alt: \"manomano\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), !isMf && !isB2b && React.createElement(\"img\", {\n  src: logo,\n  alt: \"manomano\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})), React.createElement(\"nav\", {\n  className: \"menu__nav\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  className: \"menu__nav-list\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, menuOptions && menuOptions.map(item => React.createElement(MenuItem, {\n  item: item,\n  activeLocation: activeLocation,\n  key: item.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})))));\n\nMenu.propTypes = {\n  activeLocation: PropTypes.string.isRequired,\n  menuOptions: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  isB2b: PropTypes.bool.isRequired,\n  isMf: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = ({\n  router,\n  menu,\n  seller\n}) => ({\n  activeLocation: router.location && \"\".concat(router.location.pathname).concat(router.location.search),\n  menuOptions: menu.options,\n  isB2b: seller.options.b2b,\n  isMf: seller.options.mmf\n});\n\nexport default connect(mapStateToProps)(Menu);","map":{"version":3,"sources":["/home/hugo/workspace/animation/src/Menu/Menu.jsx"],"names":["React","PropTypes","connect","MenuItem","Menu","activeLocation","menuOptions","isB2b","isMf","console","log","logoB2b","logoMf","logo","map","item","id","propTypes","string","isRequired","arrayOf","shape","bool","mapStateToProps","router","menu","seller","location","pathname","search","options","b2b","mmf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAKA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,cADY;AAEZC,EAAAA,WAFY;AAGZC,EAAAA,KAHY;AAIZC,EAAAA;AAJY,CAAD,KAMX;AAAO,EAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,OAAO,CAACC,GAAR,CAAYL,cAAZ,CADH,EAEE;AAAQ,EAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,KAAK,IAAI;AAAK,EAAA,GAAG,EAAEI,OAAV;AAAmB,EAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADZ,EAEGH,IAAI,IAAI;AAAK,EAAA,GAAG,EAAEI,MAAV;AAAkB,EAAA,GAAG,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFX,EAGG,CAACJ,IAAD,IAAS,CAACD,KAAV,IAAmB;AAAK,EAAA,GAAG,EAAEM,IAAV;AAAgB,EAAA,GAAG,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHtB,CAFF,EAOE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAI,EAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGP,WAAW,IAAIA,WAAW,CAACQ,GAAZ,CAAgBC,IAAI,IAClC,oBAAC,QAAD;AACE,EAAA,IAAI,EAAEA,IADR;AAEE,EAAA,cAAc,EAAEV,cAFlB;AAGE,EAAA,GAAG,EAAEU,IAAI,CAACC,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADc,CADlB,CADF,CAPF,CANF;;AA2BAZ,IAAI,CAACa,SAAL,GAAiB;AACfZ,EAAAA,cAAc,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UADlB;AAEfb,EAAAA,WAAW,EAAEL,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB,EAAhB,CAAlB,EAAuCF,UAFrC;AAGfZ,EAAAA,KAAK,EAAEN,SAAS,CAACqB,IAAV,CAAeH,UAHP;AAIfX,EAAAA,IAAI,EAAEP,SAAS,CAACqB,IAAV,CAAeH;AAJN,CAAjB;;AAOA,MAAMI,eAAe,GAAG,CAAC;AACvBC,EAAAA,MADuB;AAEvBC,EAAAA,IAFuB;AAGvBC,EAAAA;AAHuB,CAAD,MAIjB;AACLrB,EAAAA,cAAc,EAAEmB,MAAM,CAACG,QAAP,cAAsBH,MAAM,CAACG,QAAP,CAAgBC,QAAtC,SAAiDJ,MAAM,CAACG,QAAP,CAAgBE,MAAjE,CADX;AAELvB,EAAAA,WAAW,EAAEmB,IAAI,CAACK,OAFb;AAGLvB,EAAAA,KAAK,EAAEmB,MAAM,CAACI,OAAP,CAAeC,GAHjB;AAILvB,EAAAA,IAAI,EAAEkB,MAAM,CAACI,OAAP,CAAeE;AAJhB,CAJiB,CAAxB;;AAWA,eAAe9B,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,IAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from 'assets/svg/logo.svg';\nimport logoMf from 'assets/svg/manoFulfillment.svg';\nimport logoB2b from 'assets/svg/stock.svg';\n\nimport MenuItem from './MenuItem';\n\nimport './menu.scss';\n\nconst Menu = ({\n  activeLocation,\n  menuOptions,\n  isB2b,\n  isMf,\n}) => (\n  <aside className=\"menu\">\n    {console.log(activeLocation)}\n    <figure className=\"menu__logo-container\">\n      {isB2b && <img src={logoB2b} alt=\"manomano\" />}\n      {isMf && <img src={logoMf} alt=\"manomano\" />}\n      {!isMf && !isB2b && <img src={logo} alt=\"manomano\" />}\n    </figure>\n    <nav className=\"menu__nav\">\n      <ul className=\"menu__nav-list\">\n        {menuOptions && menuOptions.map(item => (\n          <MenuItem\n            item={item}\n            activeLocation={activeLocation}\n            key={item.id}\n          />\n        ))}\n      </ul>\n    </nav>\n  </aside>\n);\n\nMenu.propTypes = {\n  activeLocation: PropTypes.string.isRequired,\n  menuOptions: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  isB2b: PropTypes.bool.isRequired,\n  isMf: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({\n  router,\n  menu,\n  seller,\n}) => ({\n  activeLocation: router.location && `${router.location.pathname}${router.location.search}`,\n  menuOptions: menu.options,\n  isB2b: seller.options.b2b,\n  isMf: seller.options.mmf,\n});\n\nexport default connect(mapStateToProps)(Menu);\n"]},"metadata":{},"sourceType":"module"}