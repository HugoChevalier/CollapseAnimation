{"ast":null,"code":"var _jsxFileName = \"/home/hugo/workspace/animation/src/Menu/MenuSub/MenuSub.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport MenuBadge from '../MenuBadge';\n\nconst MenuSub = ({\n  items,\n  isOpen,\n  activeLocation\n}) => {\n  const className = classnames('menu__nav-subitems', {\n    'menu__nav-subitems--active': isOpen\n  });\n\n  const classNameLink = to => classnames('menu__nav-subitem', {\n    'menu__nav-subitem--active': activeLocation === to\n  });\n\n  return React.createElement(\"ul\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, items.map(item => React.createElement(\"li\", {\n    className: classNameLink(item.to),\n    key: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: item.to,\n      state: {\n        title: item.title\n      }\n    },\n    className: \"menu__nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), item.notificationsNumber > 0 && React.createElement(MenuBadge, {\n    type: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, item.notificationsNumber))));\n};\n\nMenuSub.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  isOpen: PropTypes.bool,\n  activeLocation: PropTypes.string.isRequired\n};\nMenuSub.defaultProps = {\n  isOpen: false\n};\nexport default MenuSub;","map":{"version":3,"sources":["/home/hugo/workspace/animation/src/Menu/MenuSub/MenuSub.jsx"],"names":["React","PropTypes","Link","FormattedMessage","classnames","MenuBadge","MenuSub","items","isOpen","activeLocation","className","classNameLink","to","map","item","title","pathname","state","notificationsNumber","propTypes","arrayOf","shape","isRequired","bool","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,MAFe;AAGfC,EAAAA;AAHe,CAAD,KAIV;AACJ,QAAMC,SAAS,GAAGN,UAAU,CAAC,oBAAD,EAAuB;AACjD,kCAA8BI;AADmB,GAAvB,CAA5B;;AAIA,QAAMG,aAAa,GAAGC,EAAE,IAAIR,UAAU,CAAC,mBAAD,EAAsB;AAAE,iCAA6BK,cAAc,KAAKG;AAAlD,GAAtB,CAAtC;;AAEA,SACE;AAAI,IAAA,SAAS,EAAEF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACM,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,SAAS,EAAEH,aAAa,CAACG,IAAI,CAACF,EAAN,CAA5B;AAAuC,IAAA,GAAG,EAAEE,IAAI,CAACC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAEF,IAAI,CAACF,EADb;AAEFK,MAAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAED,IAAI,CAACC;AAAd;AAFL,KADN;AAKE,IAAA,SAAS,EAAC,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAED,IAAI,CAACC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUGD,IAAI,CAACI,mBAAL,GAA2B,CAA3B,IAAgC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,IAAI,CAACI,mBAAhC,CAVnC,CADD,CADH,CADF;AAkBD,CA7BD;;AA+BAZ,OAAO,CAACa,SAAR,GAAoB;AAClBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,EAAlB,EAAqCC,UAD1B;AAElBd,EAAAA,MAAM,EAAEP,SAAS,CAACsB,IAFA;AAGlBd,EAAAA,cAAc,EAAER,SAAS,CAACuB,MAAV,CAAiBF;AAHf,CAApB;AAMAhB,OAAO,CAACmB,YAAR,GAAuB;AACrBjB,EAAAA,MAAM,EAAE;AADa,CAAvB;AAIA,eAAeF,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport MenuBadge from '../MenuBadge';\n\n\nconst MenuSub = ({\n  items,\n  isOpen,\n  activeLocation,\n}) => {\n  const className = classnames('menu__nav-subitems', {\n    'menu__nav-subitems--active': isOpen,\n  });\n\n  const classNameLink = to => classnames('menu__nav-subitem', { 'menu__nav-subitem--active': activeLocation === to });\n\n  return (\n    <ul className={className}>\n      {items.map(item => (\n        <li className={classNameLink(item.to)} key={item.title}>\n          <Link\n            to={{\n              pathname: item.to,\n              state: { title: item.title },\n            }}\n            className=\"menu__nav-link\"\n          >\n            <FormattedMessage id={item.title} />\n          </Link>\n          {item.notificationsNumber > 0 && <MenuBadge type=\"warning\">{item.notificationsNumber}</MenuBadge>}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMenuSub.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  isOpen: PropTypes.bool,\n  activeLocation: PropTypes.string.isRequired,\n};\n\nMenuSub.defaultProps = {\n  isOpen: false,\n};\n\nexport default MenuSub;\n"]},"metadata":{},"sourceType":"module"}